// delivery.js

// üöö –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
const vehicles = [
  { name: "–∞/–º –¥–æ 1—Ç", maxWeight: 1000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], minTariff: 4000, perKm: 100 },
  { name: "–∞/–º –¥–æ 1.5—Ç", maxWeight: 1500, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], minTariff: 4000, perKm: 100 },
  { name: "–∞/–º –¥–æ 3—Ç", maxWeight: 3000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], minTariff: 4500, perKm: 115 },
  { name: "–∞/–º 5—Ç", maxWeight: 5000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], minTariff: 5000, perKm: 144 },
  { name: "–∞/–º 5—Ç –≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç", maxWeight: 5000, loadingTypes: ["–≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç"], minTariff: 6000, perKm: 154 },
  { name: "–∞/–º 10—Ç", maxWeight: 10000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], minTariff: 8000, perKm: 210 },
  { name: "–ï–≤—Ä–æ—Ñ—É—Ä–∞ 20—Ç", maxWeight: 20000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], minTariff: 10000, perKm: 250 },
  { name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 5—Ç", maxWeight: 5000, loadingTypes: ["manipulator"], minTariff: 15000, perKm: 240 },
  { name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 10—Ç", maxWeight: 10000, loadingTypes: ["manipulator"], minTariff: 20000, perKm: 240 },
  { name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 15—Ç", maxWeight: 15000, loadingTypes: ["manipulator"], minTariff: 25000, perKm: 240 }
];

// üîç –ü–æ–∏—Å–∫ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
function selectVehicle(totalWeight, loadingType, forceMaxWeight = null) {
  return vehicles.find(v =>
    v.loadingTypes.includes(loadingType) &&
    (forceMaxWeight ? v.maxWeight <= forceMaxWeight : v.maxWeight >= totalWeight)
  );
}

// üí∏ –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ —Ç–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏ (–ø–æ —Ç–∏–ø—É –∞–≤—Ç–æ –∏ –∑–∞–≥—Ä—É–∑–∫–µ)
function getLoadingSurcharge(vehicle, loadingType) {
  if (loadingType !== "–≤–µ—Ä—Ö–Ω—è—è" && loadingType !== "–±–æ–∫–æ–≤–∞—è") return 0;

  const name = vehicle.name;

  if (name.includes("–¥–æ 1—Ç") || name.includes("–¥–æ 1.5—Ç") || name.includes("–¥–æ 3—Ç")) return 1500;
  if (name.includes("5—Ç") && !name.includes("–≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç")) return loadingType === "–≤–µ—Ä—Ö–Ω—è—è" ? 2500 : 2000;
  if (name.includes("10—Ç")) return loadingType === "–≤–µ—Ä—Ö–Ω—è—è" ? 3000 : 2500;
  if (name.includes("20—Ç") || name.includes("–ï–≤—Ä–æ—Ñ—É—Ä–∞")) return loadingType === "–≤–µ—Ä—Ö–Ω—è—è" ? 3500 : 3000;

  return 0;
}

// üßÆ –†–∞—Å—á—ë—Ç –¥–æ—Å—Ç–∞–≤–∫–∏
function calculateDelivery() {
  if (!window.formData) {
    alert("–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
    return;
  }

  const data = window.formData;
  const totalWeight = data.weight_standard + data.weight_large;
  const loadingType = data.loading_type;
  const distance = data.deliveryDistance || 0;
  const extraDistance = Math.max(0, distance - 40);

  let heightRestricted = false;
  let forceSmallVehicle = false;
  let trips = 1;

  // ‚õî –ü–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥ ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—ã—Å–æ—Ç–µ < 2.2 –º
  if (data.underground && parseFloat(data.height_limit) < 2.2) {
    heightRestricted = true;
    forceSmallVehicle = true;
    if (totalWeight > 1500) {
      trips = 2;
    }
  }

  // –í—ã–±–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
  const vehicle = selectVehicle(totalWeight, loadingType, forceSmallVehicle ? 1500 : null);

  if (!vehicle) {
    document.getElementById("result").innerHTML = "<p style='color:red;'>–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø–æ–¥ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.</p>";
    return;
  }

  // üí∞ –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
  let cost = vehicle.minTariff + extraDistance * vehicle.perKm;

  // üí∞ –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É
  const loadingSurcharge = getLoadingSurcharge(vehicle, loadingType);
  cost += loadingSurcharge;

  // üí∞ –í–æ–∑–≤—Ä–∞—Ç —Ç–∞—Ä—ã
  if (data.return_pallets) {
    cost += 2500;
  }

  // üí∞ –ü–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥
  if (data.underground) {
    cost += 1500;
  }

  // üí∞ –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è
  if (data.precise_time) {
    cost += 2500;
  }

  // üí∞ –£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–π—Å–æ–≤
  if (trips > 1) {
    cost *= trips;
  }

  // üì¶ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  let resultHtml = `
    <h3>–†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
    <p><strong>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:</strong> ${vehicle.name}</p>
    <p><strong>–û–±—â–∏–π –≤–µ—Å:</strong> ${totalWeight} –∫–≥</p>
    <p><strong>–¢–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏:</strong> ${loadingType}</p>
    <p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ${distance.toFixed(2)} –∫–º</p>
    <p><strong>–ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:</strong> ${vehicle.minTariff.toLocaleString()} ‚ÇΩ</p>
    <p><strong>–î–æ–ø. –∫–º:</strong> ${extraDistance.toFixed(2)} –∫–º √ó ${vehicle.perKm} ‚ÇΩ = ${(extraDistance * vehicle.perKm).toLocaleString()} ‚ÇΩ</p>
    ${loadingSurcharge > 0 ? `<p><strong>–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É (${loadingType}):</strong> ${loadingSurcharge.toLocaleString()} ‚ÇΩ</p>` : ""}
    ${data.return_pallets ? `<p><strong>–í–æ–∑–≤—Ä–∞—Ç —Ç–∞—Ä—ã:</strong> 2 500 ‚ÇΩ</p>` : ""}
    ${data.underground ? `<p><strong>–ü–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥:</strong> 1 500 ‚ÇΩ</p>` : ""}
    ${data.precise_time ? `<p><strong>–î–æ—Å—Ç–∞–≤–∫–∞ –∫ —Ç–æ—á–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏:</strong> 2 500 ‚ÇΩ</p>` : ""}
    ${trips > 1 ? `<p><strong>–î–≤–∞ —Ä–µ–π—Å–∞ –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—ã—Å–æ—Ç–µ –∏ –≤–µ—Å–∞</strong></p>` : ""}
    <hr>
    <h3>–ò—Ç–æ–≥–æ: ${Math.round(cost).toLocaleString()} ‚ÇΩ</h3>
  `;

  document.getElementById("result").innerHTML = resultHtml;
}
