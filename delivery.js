<script>
// üöö –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
const vehicles = [
  {
    name: "–∞/–º –¥–æ 1—Ç",
    maxWeight: 1000,
    loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"],
    surcharge: 1000,
    minTariff: 4000,
    perKm: 100
  },
  {
    name: "–∞/–º –¥–æ 1.5—Ç",
    maxWeight: 1500,
    loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"],
    surcharge: 1500,
    minTariff: 4000,
    perKm: 100
  },
  {
    name: "–∞/–º –¥–æ 3—Ç",
    maxWeight: 3000,
    loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"],
    surcharge: 1500,
    minTariff: 4500,
    perKm: 115
  },
  {
    name: "–∞/–º 5—Ç",
    maxWeight: 5000,
    loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"],
    surcharge: 1500,
    minTariff: 5000,
    perKm: 144
  },
  {
    name: "–∞/–º 5—Ç –≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç",
    maxWeight: 5000,
    loadingTypes: ["–≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç"],
    surcharge: 2000,
    minTariff: 6000,
    perKm: 154
  },
  {
    name: "–∞/–º 10—Ç",
    maxWeight: 10000,
    loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"],
    surcharge: 3000,
    minTariff: 8000,
    perKm: 210
  },
  {
    name: "–ï–≤—Ä–æ—Ñ—É—Ä–∞ 20—Ç",
    maxWeight: 20000,
    loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"],
    surcharge: 3500,
    minTariff: 10000,
    perKm: 250
  },
  {
    name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 5—Ç",
    maxWeight: 5000,
    loadingTypes: ["manipulator"],
    surcharge: 0,
    minTariff: 15000,
    perKm: 240
  },
  {
    name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 10—Ç",
    maxWeight: 10000,
    loadingTypes: ["manipulator"],
    surcharge: 0,
    minTariff: 20000,
    perKm: 240
  },
  {
    name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 15—Ç",
    maxWeight: 15000,
    loadingTypes: ["manipulator"],
    surcharge: 0,
    minTariff: 25000,
    perKm: 240
  }
];

// üîç –ü–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∞–≤—Ç–æ –ø–æ –≤–µ—Å—É –∏ —Ç–∏–ø—É –∑–∞–≥—Ä—É–∑–∫–∏
function selectVehicle(totalWeight, loadingType) {
  return vehicles.find(v => v.maxWeight >= totalWeight && v.loadingTypes.includes(loadingType));
}

// üì¶ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
function calculateDelivery() {
  // –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
  const weightStandard = +document.getElementById("weight_standard").value || 0;
  const weightLarge = +document.getElementById("weight_large").value || 0;
  const loadingType = document.getElementById("loading_type").value;

  const totalWeight = weightStandard + weightLarge;
  const distance = window.deliveryDistance || 0;
  const extraDistance = Math.max(distance - 40, 0);

  // –ò—â–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
  const vehicle = selectVehicle(totalWeight, loadingType);

  if (!vehicle) {
    document.getElementById("result").innerHTML = "<p style='color:red;'>–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø–æ–¥ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.</p>";
    return;
  }

  // –ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ
  let cost = vehicle.minTariff;

  // –†–∞—Å—á—ë—Ç –∑–∞ –∫–∞–∂–¥—ã–π –ª–∏—à–Ω–∏–π –∫–º –ø–æ—Å–ª–µ 40
  cost += extraDistance * vehicle.perKm;

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–¥–±–∞–≤–∫—É, –µ—Å–ª–∏ —Ç–∏–ø –ø–æ–≥—Ä—É–∑–∫–∏ –≤–µ—Ä—Ö–Ω—è—è/–±–æ–∫–æ–≤–∞—è
  if (["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è"].includes(loadingType)) {
    cost += vehicle.surcharge;
  }

  // –í—ã–≤–æ–¥
  document.getElementById("result").innerHTML = `
    <h3>–†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</h3>
    <p><strong>–í—ã–±—Ä–∞–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç:</strong> ${vehicle.name}</p>
    <p><strong>–û–±—â–∏–π –≤–µ—Å:</strong> ${totalWeight} –∫–≥</p>
    <p><strong>–¢–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏:</strong> ${loadingType}</p>
    <p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ${distance.toFixed(2)} –∫–º</p>
    <p><strong>–ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:</strong> ${vehicle.minTariff.toLocaleString()} ‚ÇΩ</p>
    <p><strong>–î–æ–ø. —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ${extraDistance.toFixed(2)} –∫–º √ó ${vehicle.perKm} ‚ÇΩ = ${(extraDistance * vehicle.perKm).toLocaleString()} ‚ÇΩ</p>
    ${["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è"].includes(loadingType) ? `<p><strong>–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É:</strong> ${vehicle.surcharge.toLocaleString()} ‚ÇΩ</p>` : ""}
    <hr>
    <h3>–ò—Ç–æ–≥–æ: ${Math.round(cost).toLocaleString()} ‚ÇΩ</h3>
  `;
}
</script>
