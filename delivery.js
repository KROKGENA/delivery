// üöö –ê–≤—Ç–æ–ø–∞—Ä–∫
const vehicles = [
  { name: "–∞/–º –¥–æ 1—Ç", maxWeight: 1000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], surcharge: 1000, minTariff: 4000, perKm: 100 },
  { name: "–∞/–º –¥–æ 1.5—Ç", maxWeight: 1500, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], surcharge: 1500, minTariff: 4000, perKm: 100 },
  { name: "–∞/–º –¥–æ 3—Ç", maxWeight: 3000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], surcharge: 1500, minTariff: 4500, perKm: 115 },
  { name: "–∞/–º 5—Ç", maxWeight: 5000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], surcharge: 1500, minTariff: 5000, perKm: 144 },
  { name: "–∞/–º 5—Ç –≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç", maxWeight: 5000, loadingTypes: ["–≥–∏–¥—Ä–æ–ª–∏—Ñ—Ç"], surcharge: 2000, minTariff: 6000, perKm: 154 },
  { name: "–∞/–º 10—Ç", maxWeight: 10000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], surcharge: 3000, minTariff: 8000, perKm: 210 },
  { name: "–ï–≤—Ä–æ—Ñ—É—Ä–∞ 20—Ç", maxWeight: 20000, loadingTypes: ["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è", "–ª—é–±–∞—è"], surcharge: 3500, minTariff: 10000, perKm: 250 },
  { name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 5—Ç", maxWeight: 5000, loadingTypes: ["manipulator"], surcharge: 0, minTariff: 15000, perKm: 240 },
  { name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 10—Ç", maxWeight: 10000, loadingTypes: ["manipulator"], surcharge: 0, minTariff: 20000, perKm: 240 },
  { name: "–ú–∞–Ω–∏–ø—É–ª—è—Ç–æ—Ä 15—Ç", maxWeight: 15000, loadingTypes: ["manipulator"], surcharge: 0, minTariff: 25000, perKm: 240 }
];

function selectVehicle(totalWeight, loadingType) {
  return vehicles.find(v => v.maxWeight >= totalWeight && v.loadingTypes.includes(loadingType));
}

function calculateDelivery() {
  if (!window.formData) {
    alert("–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã");
    return;
  }

  const data = window.formData;
  const totalWeight = data.weight_standard + data.weight_large;
  const loadingType = data.loading_type;
  const distance = data.deliveryDistance || 0;
  const extraDistance = Math.max(0, distance - 40);

  let resultHtml = `<h3>–†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</h3>`;
  let cost = 0;
  let vehicle;

  // üí° –ü–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥ –∏ –≤—ã—Å–æ—Ç–∞
  if (data.underground && data.height_limit && parseFloat(data.height_limit) < 2.2) {
    let remainingWeight = totalWeight;
    let routes = [];

    while (remainingWeight > 0) {
      if (remainingWeight >= 1500) {
        routes.push("1.5");
        remainingWeight -= 1500;
      } else {
        routes.push("1.0");
        remainingWeight -= 1000;
      }
    }

    resultHtml += `<p><strong>–ü–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥:</strong> ${routes.length} —Ä–µ–π—Å–æ–≤ (–ø–æ ${routes.join(", ")} —Ç)</p>`;

    routes.forEach(weightType => {
      const subVehicle = selectVehicle(weightType === "1.5" ? 1500 : 1000, loadingType);
      if (!subVehicle) return;

      cost += subVehicle.minTariff + (extraDistance * subVehicle.perKm);

      if (["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è"].includes(loadingType)) {
        cost += subVehicle.surcharge;
      }
    });

    cost += 1500; // –ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –ø–∞—Ä–∫–∏–Ω–≥
    resultHtml += `<p><strong>–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –ø–æ–¥–∑–µ–º–Ω—ã–π –ø–∞—Ä–∫–∏–Ω–≥:</strong> 1 500 ‚ÇΩ</p>`;
  } else {
    // üöö –ü–æ–¥–±–æ—Ä —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞
    vehicle = selectVehicle(totalWeight, loadingType);
    if (!vehicle) {
      document.getElementById("result").innerHTML = `<p style='color:red;'>–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –ø–æ–¥ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.</p>`;
      return;
    }

    cost += vehicle.minTariff;
    cost += extraDistance * vehicle.perKm;

    resultHtml += `
      <p><strong>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:</strong> ${vehicle.name}</p>
      <p><strong>–û–±—â–∏–π –≤–µ—Å:</strong> ${totalWeight} –∫–≥</p>
      <p><strong>–¢–∏–ø –∑–∞–≥—Ä—É–∑–∫–∏:</strong> ${loadingType}</p>
      <p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ${distance.toFixed(2)} –∫–º</p>
      <p><strong>–ë–∞–∑–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:</strong> ${vehicle.minTariff.toLocaleString()} ‚ÇΩ</p>
      <p><strong>–î–æ–ø. –∫–º:</strong> ${extraDistance.toFixed(2)} –∫–º √ó ${vehicle.perKm} ‚ÇΩ = ${(extraDistance * vehicle.perKm).toLocaleString()} ‚ÇΩ</p>
    `;

    if (["–≤–µ—Ä—Ö–Ω—è—è", "–±–æ–∫–æ–≤–∞—è"].includes(loadingType)) {
      cost += vehicle.surcharge;
      resultHtml += `<p><strong>–ù–∞–¥–±–∞–≤–∫–∞ –∑–∞ –∑–∞–≥—Ä—É–∑–∫—É (${loadingType}):</strong> ${vehicle.surcharge.toLocaleString()} ‚ÇΩ</p>`;
    }
  }

  // üéØ –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è
  if (data.precise_time) {
    cost += 2500;
    resultHtml += `<p><strong>–î–æ—Å—Ç–∞–≤–∫–∞ –∫ —Ç–æ—á–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏:</strong> 2 500 ‚ÇΩ</p>`;
  }

  // ‚ôªÔ∏è –í–æ–∑–≤—Ä–∞—Ç —Ç–∞—Ä—ã
  if (data.return_pallets) {
    cost += 2500;
    resultHtml += `<p><strong>–í–æ–∑–≤—Ä–∞—Ç —Ç–∞—Ä—ã:</strong> 2 500 ‚ÇΩ</p>`;
  }

  // üß± –ì—Ä—É–∑—á–∏–∫–∏
  if (data.need_movers) {
    const floor = parseInt(data.floor);
    const safeFloor = isNaN(floor) ? 1 : floor;
    const hasLift = data.lift === "true";
    const onlyUnload = data.only_unload === "true";
    const largeWeight = data.weight_large;
    const standardWeight = data.weight_standard;
    const format = data.large_format;
    const isLiftFormat = ["100x200", "100x260", "100x280"].includes(format);

    let moversCost = 0;

    // –ö—Ä—É–ø–Ω–∞—è –ø–ª–∏—Ç–∫–∞
    if (largeWeight > 0) {
      if (onlyUnload) {
        moversCost += 20 * largeWeight;
      } else if (isLiftFormat && hasLift) {
        moversCost += 30 * largeWeight;
      } else {
        let rate = 50;
        if (safeFloor > 20) rate = 90;
        else if (safeFloor > 10) rate = 70;
        else if (safeFloor > 5) rate = 60;
        moversCost += rate * largeWeight;
      }
    }

    // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø–ª–∏—Ç–∫–∞
    if (standardWeight > 0) {
      if (onlyUnload) {
        moversCost += 7 * standardWeight;
      } else if (hasLift) {
        moversCost += 9 * standardWeight;
      } else {
        let rate = 15;
        if (safeFloor > 20) rate = 50;
        else if (safeFloor > 10) rate = 30;
        else if (safeFloor > 5) rate = 20;
        moversCost += rate * standardWeight;
      }
    }

    cost += moversCost;
    resultHtml += `<p><strong>–ì—Ä—É–∑—á–∏–∫–∏:</strong> ${Math.round(moversCost).toLocaleString()} ‚ÇΩ</p>`;
  }

  // ‚úÖ –§–∏–Ω–∞–ª
  resultHtml += `<hr><h3>–ò—Ç–æ–≥–æ: ${Math.round(cost).toLocaleString()} ‚ÇΩ</h3>`;
  document.getElementById("result").innerHTML = resultHtml;
}
